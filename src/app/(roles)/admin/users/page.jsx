'use client';import { Users, Search, Edit, UserX } from 'lucide-react';import { useState } from 'react';import { AdminPageContainer, AdminCard } from '@/components/admin/AdminComponents';const mockUsers = [  { id: 1, name: 'Dr. Ahmad Al-Ali', role: 'Doctor', email: 'ahmad.ali@example.com', status: 'Active' },  { id: 2, name: 'Patient A', role: 'Patient', email: 'patient.a@example.com', status: 'Active' },  { id: 3, name: 'Fatima Al-Abbas', role: 'Pharmacist', email: 'fatima.abbas@example.com', status: 'Active' },  { id: 4, name: 'Admin User', role: 'Admin', email: 'admin@example.com', status: 'Active' },  { id: 5, name: 'Patient B', role: 'Patient', email: 'patient.b@example.com', status: 'Inactive' },];export default function AdminUsersPage() {  const [searchTerm, setSearchTerm] = useState('');  const filteredUsers = mockUsers.filter(user =>    user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||    user.role.toLowerCase().includes(searchTerm.toLowerCase()) ||    user.email.toLowerCase().includes(searchTerm.toLowerCase())  );  const handleEditUser = (userId) => {    console.log('Edit User clicked for ID:', userId);  };  const handleToggleUserStatus = (userId, currentStatus) => {    console.log(`Toggle status for User ID: ${userId}, current status: ${currentStatus}`);  };  return (    <AdminPageContainer      title="User Management"      description="Manage users in the system (Doctors, Patients, Pharmacists, Admins)."    >      <AdminCard title="Users List">        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 space-y-4 sm:space-y-0">          <div className="w-full sm:w-auto">            <div className="relative">              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400" size={20} />              <input                type="text"                placeholder="Search Users"                value={searchTerm}                onChange={(e) => setSearchTerm(e.target.value)}                className="w-full sm:w-64 pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400"              />            </div>          </div>        </div>        <div className="overflow-x-auto">          <table className="w-full border-collapse">            <thead>              <tr className="bg-gray-100 dark:bg-gray-700">                <th className="px-4 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Name</th>                <th className="px-4 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Role</th>                <th className="px-4 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Email</th>                <th className="px-4 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Status</th>                <th className="px-4 py-3 text-right text-sm font-semibold text-gray-900 dark:text-gray-100">Actions</th>              </tr>            </thead>            <tbody>              {filteredUsers.length === 0 ? (                <tr>                  <td colSpan={5} className="px-4 py-3 text-center text-gray-700 dark:text-gray-300">                    No users found.                  </td>                </tr>              ) : (                filteredUsers.map((user) => (                  <tr                    key={user.id}                    className="border-t border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors duration-200"                  >                    <td className="px-4 py-3 text-gray-900 dark:text-gray-100">                      <div className="flex items-center">                        <Users size={20} className="mr-2 text-gray-600 dark:text-gray-300" />                        {user.name}                      </div>                    </td>                    <td className="px-4 py-3 text-gray-900 dark:text-gray-100">{user.role}</td>                    <td className="px-4 py-3 text-gray-900 dark:text-gray-100">{user.email}</td>                    <td className={`px-4 py-3 ${user.status === 'Active' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>                      {user.status}                    </td>                    <td className="px-4 py-3 text-right space-x-2">                      <button                        onClick={() => handleEditUser(user.id)}                        className="inline-flex items-center px-3 py-1.5 border border-blue-600 dark:border-blue-400 text-blue-600 dark:text-blue-400 rounded-md hover:bg-blue-50 dark:hover:bg-blue-900/50 transition-colors duration-200"                      >                        <Edit size={16} className="mr-1" />                        Edit                      </button>                      <button                        onClick={() => handleToggleUserStatus(user.id, user.status)}                        className={`inline-flex items-center px-3 py-1.5 rounded-md transition-colors duration-200 ${                          user.status === 'Active'                            ? 'border border-red-600 dark:border-red-400 text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/50'                            : 'bg-green-600 dark:bg-green-500 text-white hover:bg-green-700 dark:hover:bg-green-600'                        }`}                      >                        {user.status === 'Active' ? (                          <>                            <UserX size={16} className="mr-1" />                            Deactivate                          </>                        ) : (                          <>                            <Users size={16} className="mr-1" />                            Activate                          </>                        )}                      </button>                    </td>                  </tr>                ))              )}            </tbody>          </table>        </div>      </AdminCard>    </AdminPageContainer>  );}