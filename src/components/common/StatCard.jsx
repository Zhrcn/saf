'use client';import React from 'react';import { TrendingUp, TrendingDown, Minus } from 'lucide-react';import { Card, CardContent } from '@/components/ui/Card';import { Skeleton } from '@/components/ui/skeleton';export default function StatCard({  title,  value,  icon,  trend = null,  trendLabel,  description,  loading = false,  className = '',  iconColor = 'bg-primary/10'}) {  const getTrendIcon = () => {    if (trend === 'up') return <TrendingUp className="h-4 w-4 text-green-500" />;    if (trend === 'down') return <TrendingDown className="h-4 w-4 text-red-500" />;    if (trend === 'neutral') return <Minus className="h-4 w-4 text-yellow-500" />;    return null;  };  const getTrendTextColor = () => {    if (trend === 'up') return 'text-green-500';    if (trend === 'down') return 'text-red-500';    if (trend === 'neutral') return 'text-yellow-500';    return '';  };  const generateTrendLabel = () => {    if (trendLabel) return trendLabel;    if (trend === 'up') return 'Increased';    if (trend === 'down') return 'Decreased';    if (trend === 'neutral') return 'Stable';    return '';  };  return (    <Card       className={(`h-full shadow-sm hover:shadow-md transition-shadow duration-200 ${className}`)}    >      <CardContent className="p-4">        <div className="flex justify-between items-start">          <div>            {loading ? (              <>                <Skeleton className="h-5 w-20 mb-1" />                <Skeleton className="h-9 w-16 my-1" />                {trend && <Skeleton className="h-5 w-24" />}                {description && <Skeleton className="h-5 w-32 mt-1" />}              </>            ) : (              <>                <p className="text-sm text-muted-foreground font-medium">                  {title}                </p>                <h3 className="text-3xl font-bold mt-1 text-foreground">                  {value}                </h3>                {trend && (                  <div className="flex items-center mt-1">                    {getTrendIcon()}                    <p                      className={`ml-1 text-sm ${getTrendTextColor()}`}                    >                      {generateTrendLabel()}                    </p>                  </div>                )}                {description && (                  <p className="text-sm text-muted-foreground mt-1">                    {description}                  </p>                )}              </>            )}          </div>          {icon && (            <div className={`rounded-full p-3 ${iconColor}`}>              {icon}            </div>          )}        </div>      </CardContent>    </Card>  );} 