'use client';import { Component } from 'react';export default class ErrorBoundary extends Component {    constructor(props) {        super(props);        this.state = {            hasError: false,            error: null,        };    }    static getDerivedStateFromError(error) {        return { hasError: true, error };    }    componentDidCatch(error, errorInfo) {        console.error('Uncaught error:', error, errorInfo);    }    handleReset = () => {        this.setState({ hasError: false, error: null });    };    render() {        if (this.state.hasError) {            return (                <div className="flex flex-col items-center justify-center min-h-screen p-6 text-center">                    <h1 className="text-2xl font-bold mb-4">                        Oops! Something went wrong.                    </h1>                    <p className="text-muted-foreground mb-6">                        {this.state.error?.message || 'An unexpected error occurred.'}                    </p>                    <button                        onClick={this.handleReset}                        className="px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"                    >                        Try Again                    </button>                </div>            );        }        return this.props.children;    }} 