import React from 'react';import { cn } from '@/utils/styles';import { Bell, X } from 'lucide-react';export default function NotificationDialog({  open,  onClose,  notifications = [],  onMarkAsRead,  onClearAll,  className,}) {  if (!open) return null;  return (    <div className="fixed inset-0 z-50 flex items-center justify-center">      <div        className="fixed inset-0 bg-background/80 backdrop-blur-sm"        onClick={onClose}      />      <div        className={cn(          'relative z-50 w-full max-w-lg rounded-lg border border-border bg-card shadow-lg',          className        )}      >        <div className="flex items-center justify-between border-b border-border p-4">          <div className="flex items-center gap-2">            <Bell className="h-5 w-5 text-primary" />            <h3 className="text-lg font-semibold text-foreground">              Notifications            </h3>          </div>          <button            onClick={onClose}            className="rounded-full p-1 hover:bg-accent hover:text-accent-foreground"          >            <X className="h-5 w-5" />          </button>        </div>        <div className="max-h-[60vh] overflow-y-auto p-4">          {notifications.length === 0 ? (            <div className="flex flex-col items-center justify-center py-8 text-center">              <Bell className="h-12 w-12 text-muted-foreground/50 mb-4" />              <p className="text-sm text-muted-foreground">                No notifications at this time              </p>            </div>          ) : (            <div className="space-y-4">              {notifications.map((notification) => (                <div                  key={notification.id}                  className={cn(                    'flex items-start gap-4 rounded-lg border border-border p-4',                    !notification.read && 'bg-accent/50'                  )}                >                  <div className="rounded-full bg-primary/10 p-2">                    <Bell className="h-5 w-5 text-primary" />                  </div>                  <div className="flex-1">                    <div className="flex items-start justify-between">                      <h4 className="font-medium text-foreground">                        {notification.title}                      </h4>                      <span className="text-xs text-muted-foreground">                        {notification.time}                      </span>                    </div>                    <p className="mt-1 text-sm text-muted-foreground">                      {notification.message}                    </p>                    {!notification.read && (                      <button                        onClick={() => onMarkAsRead(notification.id)}                        className="mt-2 text-xs text-primary hover:underline"                      >                        Mark as read                      </button>                    )}                  </div>                </div>              ))}            </div>          )}        </div>        {notifications.length > 0 && (          <div className="border-t border-border p-4">            <button              onClick={onClearAll}              className="w-full rounded-md bg-destructive px-4 py-2 text-sm font-medium text-destructive-foreground hover:bg-destructive/90 focus:outline-none focus:ring-2 focus:ring-destructive focus:ring-offset-2"            >              Clear All Notifications            </button>          </div>        )}      </div>    </div>  );} 